// image_matrix.jsx// Copyright (C) 2012 Fabian "fabiantheblind" Morón Zirfas// http://www.the-moron.net// http://fabiantheblind.info/// info [at] the - moron . net// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// any later version.// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.// You should have received a copy of the GNU General Public License// along with this program.  If not, see http://www.gnu.org/licenses/{	main(); // you need a function to be able to cancel a scriptfunction main(){// all is in here	var w = 25; // the image sizes  var allImages = image_loadFiles();// opens a prompt and lets the user choose a folderif(allImages == null) return; // if that what the function returns null is cancel    var pw = Math.round(Math.sqrt(allImages.length)) * w + (w*2); // this will hold the page width    var ph = pw;    if(Math.round(Math.sqrt(allImages.length)) < Math.sqrt(allImages.length)){        ph = pw + w;        }    var d = app.documents.add({documentPreferences:{pageWidth:pw,pageHeight:ph}});//~ var d = app.documents.add(); //build a basic document//~     d.documentPreferences.pageWidth = pw;// set the width//~     d.documentPreferences.pageHeight = ph; // set the heightvar p = d.pages.item(0);// finally - get the first pagevar y = w; // the upper left cornervar x = w; // the upper left cornerfor(var i in allImages){// loop thru all images var rect = p.rectangles.add({geometricBounds:[y,x,y + w,x + w]});// add a rectangle to the page     rect.place(allImages[i] );// place the image     rect.fit(FitOptions.FILL_PROPORTIONALLY);// fit it to the frame     rect.fit(FitOptions.CENTER_CONTENT);// fit it to the frame     x +=w + n; // increase x by an image width//~ if(x >= pw - (w)){ // if x is the width minus an image width//~         x = w; // reset x//~         y+= w; // and increment y by an image width//~         };//end increase x and y conditional    };//close allImages loop};// end main functionfunction image_loadFiles(){// the function that loads the files      var theFolder = Folder.selectDialog ("Choose the FOLDER");// user select a folder	if(!theFolder){// if the folder is not a folder cancel the script		return;// this cancels the whole function image_loadFiles \(\)		}; // end foldr check	var theFileType = "*.jpg";// use only jpg	var allImages = null; // will hold the images	try{// encapsulate in a try catch 	allImages = theFolder.getFiles(theFileType);// get the files by type	   }catch(e){// this is the error catcher		   alert("Error with this:\n" +e);// e is what InDesign says		   };// end catch	if((allImages.length < 1)||(allImages == null) ){// again if check if there are images		alert("There are no images");// hm something went wrong? User error		return null;// so we cancel the function	   	   }else{	return allImages;// give back the images. Success!        };// end all images check	}}